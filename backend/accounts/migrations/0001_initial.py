# Generated by Django 5.2.3 on 2025-06-13 14:46

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='Required. 4-20 characters. Letters and digits only.', max_length=20, unique=True, verbose_name='username')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('full_name', models.CharField(max_length=255, verbose_name='full name')),
                ('storage_directory', models.CharField(blank=True, max_length=255, unique=True, verbose_name='storage directory')),
                ('storage_quota', models.BigIntegerField(default=104857600, help_text='Storage quota in bytes', verbose_name='storage quota')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_admin', models.BooleanField(default=False, help_text='Designates whether the user has admin privileges.', verbose_name='admin status')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('original_name', models.CharField(max_length=255, verbose_name='original filename')),
                ('file', models.FileField(upload_to='user_uploads/%Y/%m/%d', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx', 'jpg', 'jpeg', 'png', 'txt'], message='File type not allowed. Allowed extensions: pdf, docx, jpg, png, txt')], verbose_name='file')),
                ('size', models.BigIntegerField(help_text='File size in bytes', verbose_name='file size')),
                ('upload_date', models.DateTimeField(auto_now_add=True, verbose_name='upload date')),
                ('last_download', models.DateTimeField(blank=True, null=True, verbose_name='last download')),
                ('comment', models.TextField(blank=True, max_length=500, verbose_name='comment')),
                ('shared_link', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='share link')),
                ('is_public', models.BooleanField(default=False, verbose_name='is public')),
                ('file_type', models.CharField(choices=[('PDF', 'PDF Document'), ('WORD', 'Word Document'), ('IMAGE', 'Image'), ('TEXT', 'Text File'), ('OTHER', 'Other')], default='OTHER', max_length=50, verbose_name='file type')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'verbose_name': 'file',
                'verbose_name_plural': 'files',
                'ordering': ['-upload_date'],
                'indexes': [models.Index(fields=['owner'], name='accounts_fi_owner_i_ea6dc4_idx'), models.Index(fields=['upload_date'], name='accounts_fi_upload__cda0d1_idx'), models.Index(fields=['file_type'], name='accounts_fi_file_ty_4986ef_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('size__gte', 0)), name='file_size_positive')],
            },
        ),
    ]
