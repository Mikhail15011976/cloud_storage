# Generated by Django 5.2.1 on 2025-06-16 11:59

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='user',
            options={'ordering': ['-date_joined'], 'permissions': [('can_view_all_files', 'Может просматривать все файлы'), ('can_manage_users', 'Может управлять пользователями')], 'verbose_name': 'user', 'verbose_name_plural': 'users'},
        ),
        migrations.AlterField(
            model_name='file',
            name='comment',
            field=models.TextField(blank=True, max_length=500, validators=[django.core.validators.RegexValidator(message='Комментарий содержит недопустимые символы.', regex='^[\\w\\s\\-\\.\\(\\)\\[\\]!@#$%^&+=;,\\\'\\"]*$')], verbose_name='comment'),
        ),
        migrations.AlterField(
            model_name='file',
            name='file',
            field=models.FileField(upload_to='user_uploads/%Y/%m/%d', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx', 'jpg', 'jpeg', 'png', 'txt'], message='Тип файла не разрешен. Разрешенные расширения: pdf, docx, jpg, png, txt')], verbose_name='file'),
        ),
        migrations.AlterField(
            model_name='file',
            name='original_name',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Имя файла содержит недопустимые символы.', regex="^[\\w\\s\\-\\.\\(\\)\\[\\]!@#$%^&+=;,\\']+$")], verbose_name='original filename'),
        ),
        migrations.AlterField(
            model_name='file',
            name='size',
            field=models.BigIntegerField(help_text='Размер файла в байтах', verbose_name='file size'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='Введите корректный email адрес.', regex='^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$')], verbose_name='email address'),
        ),
        migrations.AlterField(
            model_name='user',
            name='full_name',
            field=models.CharField(max_length=255, validators=[django.core.validators.RegexValidator(message='Полное имя может содержать только буквы, пробелы и дефисы.', regex='^[a-zA-Zа-яА-ЯёЁ\\s\\-]+$')], verbose_name='full name'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Указывает, должен ли пользователь считаться активным.', verbose_name='active'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_admin',
            field=models.BooleanField(default=False, help_text='Указывает, имеет ли пользователь права администратора.', verbose_name='admin status'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Указывает, может ли пользователь входить в админ-панель.', verbose_name='staff status'),
        ),
        migrations.AlterField(
            model_name='user',
            name='storage_quota',
            field=models.BigIntegerField(default=104857600, help_text='Квота хранилища в байтах', verbose_name='storage quota'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(help_text='Обязательное поле. 4-20 символов. Только буквы и цифры. Первый символ должен быть буквой.', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Username должен начинаться с буквы, содержать только буквы и цифры, и быть длиной 4-20 символов.', regex='^[a-zA-Z][a-zA-Z0-9]{3,19}$')], verbose_name='username'),
        ),
    ]
